[{"authors":["admin"],"categories":null,"content":"Xingyu Pan is a graduate student of computer engineering at New York University.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1631666810,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://panxycris.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Xingyu Pan is a graduate student of computer engineering at New York University.","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"Topics According to seven-layer model, summerizes part of important knowledge about various protocols.\n Application Layer An abstraction layer that specifies the shared communications protocols and interface methods used by hosts.   Statement Lots of content is cited from Course NYU Tandon ECE-GY 6353 INTERNET ARCHITECTURE \u0026amp; PROTOCOLS. And some of content is cited from technical blogs and also will be noted at the end of article.\n","date":1639094400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1639094400,"objectID":"3d2a74265b70e6fd83970b39cbdf9d8f","permalink":"https://panxycris.github.io/note/computer-network/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/","section":"note","summary":"Protocols of seven layers and relative security technology about it.","tags":null,"title":"Computer Network","type":"book"},{"authors":null,"categories":null,"content":"Topics  Binary Search A method in Time complexity of $O(nlogn)$   ","date":1638835200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1638835200,"objectID":"a0df61517a4271b7a70501b5f70b22de","permalink":"https://panxycris.github.io/note/leetcode/","publishdate":"2021-12-07T00:00:00Z","relpermalink":"/note/leetcode/","section":"note","summary":"Different types of problems and solutions from Leetcode.","tags":null,"title":"Leetcode","type":"book"},{"authors":null,"categories":null,"content":"Topics  Scalability Handle an amount of work that resources can be added to the system.   ","date":1638835200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1638835200,"objectID":"2a0808b8a4564248b728a586e1b71270","permalink":"https://panxycris.github.io/note/system-design/","publishdate":"2021-12-07T00:00:00Z","relpermalink":"/note/system-design/","section":"note","summary":"Some notes of large-scale web development system design.","tags":null,"title":"üìä System Design","type":"book"},{"authors":null,"categories":null,"content":"An abstraction layer that specifies the shared communications protocols and interface methods used by hosts.\n HTTP In this topic, we introduced a simple history of HTTP evolvation. And we compare the pros and cons of each of them.   Cookie Maintain user/server state   CDN Content Delivery Network   DHCP Dynamic Host Configuration Protocol   NTP Network Time Protocol   Network Translator Network Address and Port Address Translator  ","date":1639094400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1639094400,"objectID":"2633a55c25d5129bcfc724bcbb219a87","permalink":"https://panxycris.github.io/note/computer-network/application-layer/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/","section":"note","summary":"An abstraction layer that specifies the shared communications protocols and interface methods used by hosts.\n","tags":null,"title":"Application Layer","type":"book"},{"authors":null,"categories":null,"content":"A method in Time complexity of $O(nlogn)$\nIntroduction  Due to the time complexity of binary search is $O(nlogn)$ , which greatly improves the efficiency of algorithm, it appears in the problems frequently. The data always keeps some sequence, like the number order.  Situation The data sequence always have a special order, like number: 1, 2, 3\u0026hellip;ÔºàSo we can choose either left or right part to find the targetÔºâ\nTime complexity $O(nlogn)$\n","date":1638835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638835200,"objectID":"4a6be5ba0ecb9894c8c9481f84043c92","permalink":"https://panxycris.github.io/note/leetcode/binary-search/","publishdate":"2021-12-07T00:00:00Z","relpermalink":"/note/leetcode/binary-search/","section":"note","summary":"A method in Time complexity of $O(nlogn)$\n","tags":null,"title":"Binary Search","type":"book"},{"authors":null,"categories":null,"content":"Handle an amount of work that resources can be added to the system.\nTwo modes  Vertical scale  add more computing power -\u0026gt; single node   Horizontal scale  add more machines or resources -\u0026gt; more nodes    Load Balancing Target  Minimize server response time Maximize throughput  Methods  Random Round Robin Least Connection Least Response Time Least Bandwith Hashing  Hash various data including connection or header information   Custom Load  Query the load on individual servers via SNMP CPU usage, memory and response time Combine to suit their requests    Example DNS\nDNS adopts Round Robin algorithm to return DNS Lookup response.\n  In this lookup search, we can see that multiple times search www.google.com we can get different IP addresses from DNS servers. It permutes the servers in the list one by one.\nBut also, load balancer for DNS attempts to re-order the list to give priority to numerically \u0026ldquo;closer\u0026rdquo; networks according to different locations.\nCaching Cache is lightning-fast, and helps record the most frequent data query, request or object. It holds every dataset in RAM and requests are handled as fast as technically possible.\nThe data for caching  Cached Database Queries Cahced Object  Tool   Redis\n Advantages  Extra database-features like persistence Lots of Data Types Both clients and servers cache the data   AOF Log(Append Only File)  Appending all write operations received by the server   RDB Snapshot  Backup file, take a full snapshot of the current Redis state      Memcached\n MultiThreaded Simplicity, ease of use, easy setup    Database Partition/Sharding  A horizontal partitioning method The data is partitioned accross multiple servers Procsessing workload against a large table can be spread  Replication Setting up a separate copy of the data on a different node.\n Read the database logs Each change of the database is replicated to other copies  A replication engine can be used.\n Easy to setup On-going administration and management Additional storage for each replication Additional I/O and CPU usage to support the data replication process  Asynchronism","date":1638835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638835200,"objectID":"0cc0484c6e1072fdd2c6f0aec2fddb44","permalink":"https://panxycris.github.io/note/system-design/scalability/","publishdate":"2021-12-07T00:00:00Z","relpermalink":"/note/system-design/scalability/","section":"note","summary":"Handle an amount of work that resources can be added to the system.\n","tags":null,"title":"Scalability","type":"book"},{"authors":null,"categories":null,"content":"In this topic, we introduced a simple history of HTTP evolvation. And we compare the pros and cons of each of them.\nHTTP Transfer progress\nWhen TCP connection has already initiated, HTTP begins to be transferred.\nHTTP 1.0  Non-persistant HTTP  At most one object sent over TCP connection Multiple Objects required multiple connections   Response Time  2RTT + file transmission Time      HTTP 1.1  Persistant HTTP  Subsequent HTTP messages sent over the open connection   FCFS  HOL Blocking Problem      HTTP/2  Stream  Multiplexed Prioritized   Binary Framing Layer  A Layer in the application layer Help HTTP Multiplexed to the frame, each frame can contain only header or data      HTTP/3  QUIC(Quick UDP Internet Congestion)  Based on UDP Adopts approaches of TCP connection establishment  Reliability, congestion control, authentication, encryption      Here is a comparison of TLS and QUIC\n ","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"64f182ff9542a605a1aba2e9b511c02d","permalink":"https://panxycris.github.io/note/computer-network/application-layer/http/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/http/","section":"note","summary":"In this topic, we introduced a simple history of HTTP evolvation. And we compare the pros and cons of each of them.\n","tags":null,"title":"HTTP","type":"book"},{"authors":null,"categories":null,"content":"Maintain user/server state\nHTTP GET/response is stateless, so in the server, we always create a cookie for each client, so that in following transactions, the server can track the request state of each client.\nPrivacy In each website, it always asks for your sancation for the cookies, you can browse a new webpage that you never browsed before to try it.\nComponents  cookie header line of HTTP response message cookie header line in next HTTP request message cookie file kept on user‚Äôs host, managed by user‚Äôs browser back-end database at website  What a site creates for cookie  unique ID (aka ‚Äúcookie‚Äù) entry in backend database for ID  Working process Here is a graph to show how a cookie works\n ","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"fb7994afb325e6a83052b123edd9f17e","permalink":"https://panxycris.github.io/note/computer-network/application-layer/cookie/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/cookie/","section":"note","summary":"Maintain user/server state\n","tags":null,"title":"Cookie","type":"book"},{"authors":null,"categories":null,"content":"Content Delivery Network\nA geographically distributed network of servers and their data centers that help in web content distribution to users with minimal delay.\nHow does CDN work CDN works by bringing content closer to the geographic location of the end users.\n Located data centers situated around the world Within each Points of Presence (PoPs) are thousands of caching servers Improve connectivity and accelerate the speed at which content is delivered to the end user.    Work process  The user sends a request to the business‚Äô web server to retrieve all the page‚Äôs components The assets are retrieved from the origin server and once delivered are stored in the PoP edge caching server close to the end user. When the same user requests the same assets the next time, the requests don‚Äôt go to the origin server. Instead the requests go to the cached files from the PoP server to see if the stored assets are still available and deliver them to the user.  If they are not available or the caching server has not cached the assets yet, the request is sent to the origin server again. Once your static assets are cached on all the CDN servers for a particular location, all subsequent website visitor requests for static assets will be delivered from these edge servers instead of the origin server.    Benefits  Faster delivery Optimize bandwidth and latency Improve website security  Offer Distributed Denial of Service or DDoS protection by distributing the malicious requests across the network   Help control access to different regions  Delegate authentication tasks to the edge Help in collecting logs and analyzing user-generated data    The content cited from CDNetworks.\n","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"e7aa85caf7c83894d3d2d7c6ef499964","permalink":"https://panxycris.github.io/note/computer-network/application-layer/cdn/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/cdn/","section":"note","summary":"Content Delivery Network\n","tags":null,"title":"CDN","type":"book"},{"authors":null,"categories":null,"content":"Dynamic Host Configuration Protocol\nDesigned to dynamically configure TCP/IP hosts in a centralized manner from DHCP server.\nFunction Configure parameters in a subnet dynamically\n IP Address, Subnet mask, default gateway IP address  Process Here is a graph to show how DHCP works\n    A client first broadcasts a DHCP DISCOVERY message on its local physical network\n The message has 0.0.0.0 as the source IP address The message may be forwarded by relay agents to servers in other physical networks    Each server may respond with a DHCPOFFER message with an available network address in the Your IP Address field\n  The client may receives more than one DHCPOFFER messages\n It chooses one server from all responding servers based on the offered IP address and the lease duration. The client then broadcasts a DHCPREQUEST message with the Server Identifier option to indicated the selected server.    When the DHCPREQUEST message is received, only the chosen server responds with a DHCPACK message carrying a full set of configuration parameters to the client.\n When the client receives, it checks the parameters and configures its TCP/IP modules using the parameters. The message specifies the duration of the lease. When the lease expires, the client may ask the server to renew it. Otherwise, the address will be put back in the pool or assigned to other hosts.    (When two DHCP servers are used) The client may send a DHCPRELEASE message to the server to relinquish the lease on the network address.\n  DHCP Message Format    Opcode: 1 ‚Äì a boot request from client; 2 ‚Äì a boot reply from server Hardware Address Type  The value is 1 for an Ethernet MAC address   Hop count  Optionally used by relay agents A DHCP relay agent is a host or router that forwards DHCP messages between DHCP clients and servers   Transaction ID  Randomly assigned to link requests and replies between a client and a server   Client HW address  The hardware address of the client For an Ethernet address, the first 6 bytes are filled and the remaining bytes are set to 0   Server hostname: Hostname of the DHCP server Boot filename  Use in a DHCPOFFER message to specify the fully qualified, null terminated path name of a file to bootstrap from    DHCP Relay Information Option Assign IP address based on its location. DHCP client in a Residential Gateway (RG) will send a DHCP request to an ISP Broadband Network Gateway. A network access node, such as an IP DSLAM, aggregates traffic from many users.\n","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"748651d935e338caaec38a19a1c8fb9c","permalink":"https://panxycris.github.io/note/computer-network/application-layer/dhcp/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/dhcp/","section":"note","summary":"Dynamic Host Configuration Protocol\n","tags":null,"title":"DHCP","type":"book"},{"authors":null,"categories":null,"content":"Network Time Protocol\nProvide accurate timing in the network and synchronize routers, hosts, and other network devices.\n  Structure NTP timing service uses a hierarchical architecture organized into 16 stratums\n An NTP primary server, or stratum-1, is synchronized with a high precision clock At least 175,000 hosts running NTP in the Internet  Operation Mode  Clients and servers can operate in the multicast or broadcast mode. NTP client synchronize with a server in two ways  Query time information from and synchronize to a remote NTP server, use rdate or ntpdate Synchronize with a remote server continuously and automatically, use ntpd   ","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"8ead514bb129c623b59dd9d510180871","permalink":"https://panxycris.github.io/note/computer-network/application-layer/ntp/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/ntp/","section":"note","summary":"Network Time Protocol\n","tags":null,"title":"NTP","type":"book"},{"authors":null,"categories":null,"content":"Network Address and Port Address Translator\nNAT Network Address Translator\n Mapping one set of IP addresses (usually private) to another set of IP addresses (usually public). Used for  Reuse IP address: Share a small pool of IP addresses with a large number of hosts Security: internal network is invisible to the outside    PAT Port Address Translator\n Translate transport identifiers  TCP and UDP port numbers, ICMP query identifiers    Example Here is an example that shows how NAT and PAT works:\n ","date":1639094400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639094400,"objectID":"3a86fc0e8af361e4c95c3f23c4a58bf1","permalink":"https://panxycris.github.io/note/computer-network/application-layer/network-translator/","publishdate":"2021-12-10T00:00:00Z","relpermalink":"/note/computer-network/application-layer/network-translator/","section":"note","summary":"Network Address and Port Address Translator\n","tags":null,"title":"Network Translator","type":"book"},{"authors":["Xingyu Pan","Yu Pan","Dixin Chen","Ning Li"],"categories":[],"content":"  An Android App that recites GRE vocabulary.\n  It helps the customers manage words and scientifically makes a study plan according to The Ebbinghaus Forgetting Curve.\n  It is a coursework for Human-Computer Interaction Systems. And I completed the part of making the study plans.\n  ","date":1561334400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631666810,"objectID":"1ea71f472157c9ef6d230e721f5a3d1b","permalink":"https://panxycris.github.io/project/whaleword/","publishdate":"2019-06-24T00:00:00Z","relpermalink":"/project/whaleword/","section":"project","summary":"An Android App that recites GRE vocabulary","tags":[],"title":"WhaleWord","type":"project"},{"authors":["Xingyu Pan","Ning Li","Zhenfei Cao","Yu Ge","Jiewen Ran","Nan Liang","Zhong jie","Ping Zhang","Dixin Chen"],"categories":[],"content":" A platform for patent trading based on blockchain. It provides services including patent trade, patent loan and insurance and patent automated evaluation. It is a competition project. The group of the project consists of 23 people and I am the product manager, who is responsible for the requirement design and the development of blockchain structure.  ","date":1541241187,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631666810,"objectID":"ba9938ff6324dd1418508ac5c2c15f60","permalink":"https://panxycris.github.io/project/ipnet/","publishdate":"2018-11-03T18:33:07+08:00","relpermalink":"/project/ipnet/","section":"project","summary":"A platform for patent trading on blockchain","tags":[],"title":"IPNET","type":"project"},{"authors":["Yu Pan","Xingyu Pan","Ning Li","Dixin Chen"],"categories":[],"content":" A platform for data annotation labeling. The data annotation requester publishes images and videos on the platform, and the platform automatically labels, and then sends the lower recognition rate data to the workers to label. It is a coursework for Software Engineering and Computing III. And I completed front-end and optimize the recognition algorithm.  ","date":1529837645,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631666810,"objectID":"2fc8915a321406f504a2fe0cbc5654fd","permalink":"https://panxycris.github.io/project/utag/","publishdate":"2018-06-24T18:54:05+08:00","relpermalink":"/project/utag/","section":"project","summary":"A platform for crowdsourcing labeling","tags":[],"title":"UTag","type":"project"}]