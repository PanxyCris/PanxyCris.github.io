<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary Search | PanxyCris</title>
    <link>https://panxycris.github.io/note/leetcode/binary-search/</link>
      <atom:link href="https://panxycris.github.io/note/leetcode/binary-search/index.xml" rel="self" type="application/rss+xml" />
    <description>Binary Search</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 07 Dec 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://panxycris.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>Binary Search</title>
      <link>https://panxycris.github.io/note/leetcode/binary-search/</link>
    </image>
    
    <item>
      <title>Maximum Running Time of N Computers</title>
      <link>https://panxycris.github.io/note/leetcode/binary-search/maximum-running-time-of-n-computers/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://panxycris.github.io/note/leetcode/binary-search/maximum-running-time-of-n-computers/</guid>
      <description>&lt;h3 id=&#34;problem-description&#34;&gt;Problem description&lt;/h3&gt;
&lt;p&gt;You have &lt;code&gt;n&lt;/code&gt; computers. You are given the integer &lt;code&gt;n&lt;/code&gt; and a &lt;strong&gt;0-indexed&lt;/strong&gt; integer array &lt;code&gt;batteries&lt;/code&gt; where the $i^{th}$ battery can &lt;strong&gt;run&lt;/strong&gt; a computer for &lt;code&gt;batteries[i]&lt;/code&gt; minutes. You are interested in running &lt;strong&gt;all&lt;/strong&gt; &lt;code&gt;n&lt;/code&gt; computers &lt;strong&gt;simultaneously&lt;/strong&gt; using the given batteries.&lt;/p&gt;
&lt;p&gt;Initially, you can insert &lt;strong&gt;at most one battery&lt;/strong&gt; into each computer. After that and at any integer time moment, you can remove a battery from a computer and insert another battery &lt;strong&gt;any number of times&lt;/strong&gt;. The inserted battery can be a totally new battery or a battery from another computer. You may assume that the removing and inserting processes take no time.&lt;/p&gt;
&lt;p&gt;Note that the batteries cannot be recharged.&lt;/p&gt;
&lt;p&gt;Return the &lt;strong&gt;maximum&lt;/strong&gt; number of minutes you can run all the &lt;code&gt;n&lt;/code&gt; computers simultaneously.&lt;/p&gt;
&lt;h3 id=&#34;constraints&#34;&gt;Constraints&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= batteries.length &amp;lt;= &lt;/code&gt;$10^5$&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= batteries[i] &amp;lt;= &lt;/code&gt;$10^9$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;For this kind of problem, we always find it hard to get this extreme value. But if we change a thought, when given the result, can we implement this method? Like in this problem, when given an amount of minutes, can we run all the &lt;code&gt;n&lt;/code&gt; computers simultaneously? When the situation changes, this problem is converted into a binary search problem. We can set a left and right boundary of this amount of minutes, and we use binary search to get the final value of our solution.&lt;/p&gt;
&lt;p&gt;Thus, how can we determine whether we can run &lt;code&gt;n&lt;/code&gt; computers simultaneously when given a special number of minutes? We can set &lt;code&gt;k&lt;/code&gt; as the given number of minutes. And for &lt;code&gt;target&lt;/code&gt; as the summation number of minutes of &lt;code&gt;n&lt;/code&gt; computers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define ll long long
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
ll target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And for each battery, it can only choose its maximum volumne of electricity, so each one choose either its volume or &lt;code&gt;k&lt;/code&gt; number of minutes for running time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;ll res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; battery: batteries){
    res &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; battery &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; battery : k;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; target)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the result reaches the &lt;code&gt;target&lt;/code&gt; number of minutes, it proves that &lt;code&gt;k&lt;/code&gt; number of minutes can fit the solution. All of the code shows like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define ll long long
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
    ll maxRunTime(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; batteries) {
        ll sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; battery: batteries)
            sum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; battery;
        ll l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;n;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; r){
            ll mid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (r&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;l)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// target value rounds up to an integer
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(canFit(n, mid, batteries)){
                l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid;
            }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
                r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; l;
    }
    
    ll &lt;span style=&#34;color:#a6e22e&#34;&gt;canFit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, ll k, vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; batteries){
        ll target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k;
        ll res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; battery: batteries){
            res &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; battery &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; battery : k;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; target)
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; target;
    }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The problem is cited from &lt;a href=&#34;https://leetcode.com/problems/maximum-running-time-of-n-computers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leetcode 2141. Maximum Running Time of N Computers&lt;/a&gt;. And the solution is cited from &lt;a href=&#34;https://leetcode.com/problems/maximum-running-time-of-n-computers/discuss/1692979/Java-Simple-Solution-w.-Explanation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[Java] Simple Solution w. Explanation - Chen-Yiyang&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
